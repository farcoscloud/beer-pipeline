name: Daily

on:
  schedule:
    - cron: '*/15 * * * *'   # ogni 15 minuti (UTC)
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    concurrency:
      group: beer-pipeline
      cancel-in-progress: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check time window (Europe/Rome)
        id: window
        run: |
          sudo apt-get update >/dev/null 2>&1 && sudo apt-get install -y tzdata >/dev/null 2>&1
          hour=$(TZ=Europe/Rome date +%H)
          if [[ $hour -ge 15 || $hour -lt 3 ]]; then
            echo "run=true" >> "$GITHUB_OUTPUT"
          else
            echo "run=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Run pipeline (export SQLite -> CSV in ./output)
        # Esegui se siamo nella finestra OR se il run è manuale (workflow_dispatch)
        if: steps.window.outputs.run == 'true' || github.event_name == 'workflow_dispatch'
        env:
          SRC_FOLDER_ID: 1vsVUoDGDGeVItdzkmWGZf5l0rA4gjfN4
          SRC_FILE_ID: 1D0eURKnVOJAlTvHGjUDbMqcUN4_CRr2F   # opzionale; se cambia ID, il Python fa fallback alla cartella per nome
          TARGET_FILENAME: data_raw.sqlite3
          CSV_SEPARATOR: ";"
          SQLITE_CHUNKSIZE: "250000"
          CLEAN_OUTPUT: "1"
          # se l'evento è manuale, forza l’override orario nel Python
          FORCE_RUN: ${{ github.event_name == 'workflow_dispatch' && '1' || '0' }}
        run: python pipeline.py

      - name: Ensure output dir is tracked (add .gitkeep if empty)
        run: |
          mkdir -p output
          if [ -z "$(ls -A output || true)" ]; then
            echo "placeholder" > output/.gitkeep
          fi

      - name: Commit & Push results
        if: steps.window.outputs.run == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add output/
          git status
          git commit -m "Quarter-hour export $(date -u '+%Y-%m-%d %H:%M:%S') UTC" || echo "No changes to commit"
          git push
